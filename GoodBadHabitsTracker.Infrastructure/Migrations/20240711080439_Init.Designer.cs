// <auto-generated />
using System;
using GoodBadHabitsTracker.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoodBadHabitsTracker.Infrastructure.Migrations
{
    [DbContext(typeof(HabitsDbContext))]
    [Migration("20240711080439_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Habit.Habit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IconPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGood")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Habit.GoodHabit", b =>
                {
                    b.HasBaseType("GoodBadHabitsTracker.Core.Models.Habit.Habit");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsTimeBased")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ReminderTimes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepeatDaysOfMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepeatDaysOfWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepeatInterval")
                        .HasColumnType("int");

                    b.Property<int>("RepeatMode")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("Good Habits", (string)null);
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Habit.LimitHabit", b =>
                {
                    b.HasBaseType("GoodBadHabitsTracker.Core.Models.Habit.Habit");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsQuit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTimeBased")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("Limit Habits", (string)null);
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Habit.QuitHabit", b =>
                {
                    b.HasBaseType("GoodBadHabitsTracker.Core.Models.Habit.Habit");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsQuit")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("Quit Habits", (string)null);
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Group", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.User", "User")
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodBadHabitsTracker.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Habit.GoodHabit", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.Group", "Group")
                        .WithMany("GoodHabits")
                        .HasForeignKey("GroupId");

                    b.HasOne("GoodBadHabitsTracker.Core.Models.User", "User")
                        .WithMany("GoodHabits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("GoodBadHabitsTracker.Core.Models.Comment", "Comments", b1 =>
                        {
                            b1.Property<Guid>("GoodHabitId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Body")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("date");

                            b1.HasKey("GoodHabitId", "Id");

                            b1.ToTable("Good Habits_Comments");

                            b1.WithOwner()
                                .HasForeignKey("GoodHabitId");
                        });

                    b.OwnsMany("GoodBadHabitsTracker.Core.Models.DayResult", "DayResults", b1 =>
                        {
                            b1.Property<Guid>("GoodHabitId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("date");

                            b1.Property<int>("Progress")
                                .HasColumnType("int");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("GoodHabitId", "Id");

                            b1.ToTable("Good Habits_DayResults");

                            b1.WithOwner()
                                .HasForeignKey("GoodHabitId");
                        });

                    b.Navigation("Comments");

                    b.Navigation("DayResults");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Habit.LimitHabit", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.Group", "Group")
                        .WithMany("LimitHabits")
                        .HasForeignKey("GroupId");

                    b.HasOne("GoodBadHabitsTracker.Core.Models.User", "User")
                        .WithMany("LimitHabits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("GoodBadHabitsTracker.Core.Models.Comment", "Comments", b1 =>
                        {
                            b1.Property<Guid>("LimitHabitId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Body")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("date");

                            b1.HasKey("LimitHabitId", "Id");

                            b1.ToTable("Limit Habits_Comments");

                            b1.WithOwner()
                                .HasForeignKey("LimitHabitId");
                        });

                    b.OwnsMany("GoodBadHabitsTracker.Core.Models.DayResult", "DayResults", b1 =>
                        {
                            b1.Property<Guid>("LimitHabitId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("date");

                            b1.Property<int>("Progress")
                                .HasColumnType("int");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LimitHabitId", "Id");

                            b1.ToTable("Limit Habits_DayResults");

                            b1.WithOwner()
                                .HasForeignKey("LimitHabitId");
                        });

                    b.Navigation("Comments");

                    b.Navigation("DayResults");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Habit.QuitHabit", b =>
                {
                    b.HasOne("GoodBadHabitsTracker.Core.Models.Group", "Group")
                        .WithMany("QuitHabits")
                        .HasForeignKey("GroupId");

                    b.HasOne("GoodBadHabitsTracker.Core.Models.User", "User")
                        .WithMany("QuitHabits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("GoodBadHabitsTracker.Core.Models.Comment", "Comments", b1 =>
                        {
                            b1.Property<Guid>("QuitHabitId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Body")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("date");

                            b1.HasKey("QuitHabitId", "Id");

                            b1.ToTable("Quit Habits_Comments");

                            b1.WithOwner()
                                .HasForeignKey("QuitHabitId");
                        });

                    b.OwnsMany("GoodBadHabitsTracker.Core.Models.DayResult", "DayResults", b1 =>
                        {
                            b1.Property<Guid>("QuitHabitId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("date");

                            b1.Property<int>("Progress")
                                .HasColumnType("int");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("QuitHabitId", "Id");

                            b1.ToTable("Quit Habits_DayResults");

                            b1.WithOwner()
                                .HasForeignKey("QuitHabitId");
                        });

                    b.Navigation("Comments");

                    b.Navigation("DayResults");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.Group", b =>
                {
                    b.Navigation("GoodHabits");

                    b.Navigation("LimitHabits");

                    b.Navigation("QuitHabits");
                });

            modelBuilder.Entity("GoodBadHabitsTracker.Core.Models.User", b =>
                {
                    b.Navigation("GoodHabits");

                    b.Navigation("Groups");

                    b.Navigation("LimitHabits");

                    b.Navigation("QuitHabits");
                });
#pragma warning restore 612, 618
        }
    }
}
